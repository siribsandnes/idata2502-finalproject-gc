name: Deploy Website

on:
  push:
    branches:
      - main

jobs:
  test:
    name: Terraform Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.22'

      - name: Setup Credentials
        run: |
          echo "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_JSON }}" > ./test/credentials.json
        shell: bash
        env:
          GOOGLE_APPLICATION_CREDENTIALS_JSON: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

      - name: Run Terratest
        run: |
          cd test
          go test -v
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/test/credentials.json



  terraform:
    name: Deploy Infrastructure
    runs-on: ubuntu-latest
    needs: test  # This ensures the Terraform job only runs if the test job succeeds

    defaults:
      run:
        working-directory: ./terraform

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: '1.0.0'

      - name: Create GCP Credentials File
        run: |
          echo '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}' > credentials.json
          echo '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}' > ${{ github.workspace }}/credentials.json
        shell: bash

      - name: Terraform Format
        run: terraform fmt

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -var="google_application_credentials=${{ github.workspace }}/credentials.json" -input=false -out=tfplan

      - name: Terraform Apply
        run: terraform apply -auto-approve -var="google_application_credentials=${{ github.workspace }}/credentials.json"
